«REM»
C) Copyright 2011 CSI-PIEMONTE;                                             
                                                                            
Concesso in licenza a norma dell'EUPL, esclusivamente versione 1.1;         
Non e' possibile utilizzare l'opera salvo nel rispetto della Licenza.       
E' possibile ottenere una copia della Licenza al seguente indirizzo:        
                                                                            
http://www.eupl.it/opensource/eupl-1-1                                      
                                                                            
Salvo diversamente indicato dalla legge applicabile o concordato per        
iscritto, il software distribuito secondo i termini della Licenza e'        
distribuito "TAL QUALE", SENZA GARANZIE O CONDIZIONI DI ALCUN TIPO,         
esplicite o implicite.                                                      
Si veda la Licenza per la lingua specifica che disciplina le autorizzazioni 
e le limitazioni secondo i termini della Licenza.                           
«ENDREM»

«IMPORT servicegen»
«IMPORT servicedef»
«IMPORT typedef»
«IMPORT appresources»
«IMPORT template::configfiles»
«IMPORT template::papdconfigfiles»
«IMPORT papdconfigfiles»

«EXTENSION template::ServicegenExtensions»
«EXTENSION template::cxf::ServicegenCxfExtensions»


«REM»
==========================================================================================================================
RESOURCE CONNECTOR FILES PER C.S.I
==========================================================================================================================
«ENDREM»

«REM»Delego al template ServiceGen CSI la creazione del file PD nella directory corretta«ENDREM»
«DEFINE defpdejbclientfile(SOABEModel model, ServiceDef sd, ServiceDef context, TargetPlatformCodes paplatform, String pdPluginFQN, String customPAJndi) FOR EJBPABinding»
	«EXPAND template::papdconfigfiles::defpdejbfile(model, sd, getSpecificPdConfigRootDir(context.codServizio, model)+"/"+pdEJBDefFileName(sd), paplatform, pdPluginFQN, customPAJndi) FOR this»
«ENDDEFINE»

«REM»Delego al template ServiceGen CSI la creazione del file nella directory corretta«ENDREM»
«DEFINE defpdsoapclientfile(SOABEModel model, ServiceDef sd, ServiceDef context, String customPAUrl, String customPAUri) FOR SOAPPABRBinding»
	«EXPAND template::papdconfigfiles::defpdsoapfile(model, sd, getSpecificPdConfigRootDir(context.codServizio, model)+"/"+pdSOAPDefFileName(sd), customPAUrl, customPAUri) FOR this»
«ENDDEFINE»


«REM»PD Selector«ENDREM»
«DEFINE pdSelectorFile(ServiceDef context, SOABEModel model) FOR PDPAServiceConnector»
	«EXPAND template::papdconfigfiles::pdSelectorFile(context, model, getSpecificPdConfigRootDir(context.codServizio, model)+"/"+pdSelectorFileName()) FOR this»
«ENDDEFINE»



«REM»
==========================================================================================================================
RESOURCE CONNECTOR FILES PER CXF
==========================================================================================================================
«ENDREM»

«REM»File Spring di definizione del client«ENDREM»
«DEFINE cxfClientConfigFile(ServiceDef context, SOABEModel model, ServiceDef sd, boolean includeCxfImports) FOR RPCWebServiceConnector»
«FILE getSpecificWscliConfigRootDir(context.codServizio, model) +"/"+sd.codServizio.toLowerCase()+"ClientCxf.xml"»<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:http="http://cxf.apache.org/transports/http/configuration"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:sec="http://cxf.apache.org/configuration/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						   http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
						   http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
						   http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
						   http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd">
	«IF includeCxfImports»
	<!-- import CXF resources -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	«ENDIF»

	<!-- the client bean -->
	<bean id="«wsCallClientBeanId(sd)»"
		  class="«fullQualifiedWebServiceInterfaceName(sd)»"
		  factory-bean="«wsCallClientFactoryBeanId(sd)»"
		  factory-method="create"/>

	<!-- and its factory -->
	<bean id="«wsCallClientFactoryBeanId(sd)»" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass" value="«fullQualifiedWebServiceInterfaceName(sd)»"/>
		<property name="address" value="«getWSURLPlaceHolder(sd)»" />
	</bean>


	«PROTECT CSTART '<!--' CEND '-->' ID getRegionUID(""+sd.codServizio+"cxf.client")»
	<!-- Other CXF configurations (bus, conduit, security, ecc) -->	
	«ENDPROTECT»

</beans>
«ENDFILE»
«ENDDEFINE»
